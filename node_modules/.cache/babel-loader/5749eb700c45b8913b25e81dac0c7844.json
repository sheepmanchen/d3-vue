{"remainingRequest":"/Users/sheepman/Github/d3-vue-example/node_modules/babel-loader/lib/index.js!/Users/sheepman/Github/d3-vue-example/node_modules/eslint-loader/index.js??ref--13-0!/Users/sheepman/Github/d3-vue-example/src/assets/js/d3.layout.cloud.js","dependencies":[{"path":"/Users/sheepman/Github/d3-vue-example/src/assets/js/d3.layout.cloud.js","mtime":1556813911081},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Date$now from \"/Users/sheepman/Github/d3-vue-example/node_modules/@babel/runtime-corejs2/core-js/date/now\";\nimport \"core-js/modules/es6.array.sort\";\n\n// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\nvar dispatch = require(\"d3-dispatch\").dispatch;\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\nexport default function () {\n  var size = [256, 256],\n      text = cloudText,\n      font = cloudFont,\n      fontSize = cloudFontSize,\n      fontStyle = cloudFontNormal,\n      fontWeight = cloudFontNormal,\n      rotate = cloudRotate,\n      padding = cloudPadding,\n      spiral = archimedeanSpiral,\n      words = [],\n      timeInterval = Infinity,\n      event = dispatch(\"word\", \"end\"),\n      timer = null,\n      random = Math.random,\n      cloud = {},\n      canvas = cloudCanvas;\n\n  cloud.canvas = function (_) {\n    return arguments.length ? (canvas = functor(_), cloud) : canvas;\n  };\n\n  cloud.start = function () {\n    var contextAndRatio = getContext(canvas()),\n        board = zeroArray((size[0] >> 5) * size[1]),\n        bounds = null,\n        n = words.length,\n        i = -1,\n        tags = [],\n        data = words.map(function (d, i) {\n      d.text = text.call(this, d, i);\n      d.font = font.call(this, d, i);\n      d.style = fontStyle.call(this, d, i);\n      d.weight = fontWeight.call(this, d, i);\n      d.rotate = rotate.call(this, d, i);\n      d.size = ~~fontSize.call(this, d, i);\n      d.padding = padding.call(this, d, i);\n      return d;\n    }).sort(function (a, b) {\n      return b.size - a.size;\n    });\n    if (timer) clearInterval(timer);\n    timer = setInterval(step, 0);\n    step();\n    return cloud;\n\n    function step() {\n      var start = _Date$now();\n\n      while (_Date$now() - start < timeInterval && ++i < n && timer) {\n        var d = data[i];\n        d.x = size[0] * (random() + .5) >> 1;\n        d.y = size[1] * (random() + .5) >> 1;\n        cloudSprite(contextAndRatio, d, data, i);\n\n        if (d.hasText && place(board, d, bounds)) {\n          tags.push(d);\n          event.call(\"word\", cloud, d);\n          if (bounds) cloudBounds(bounds, d);else bounds = [{\n            x: d.x + d.x0,\n            y: d.y + d.y0\n          }, {\n            x: d.x + d.x1,\n            y: d.y + d.y1\n          }]; // Temporary hack\n\n          d.x -= size[0] >> 1;\n          d.y -= size[1] >> 1;\n        }\n      }\n\n      if (i >= n) {\n        cloud.stop();\n        event.call(\"end\", cloud, tags, bounds);\n      }\n    }\n  };\n\n  cloud.stop = function () {\n    if (timer) {\n      clearInterval(timer);\n      timer = null;\n    }\n\n    return cloud;\n  };\n\n  function getContext(canvas) {\n    canvas.width = canvas.height = 1;\n    var ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\n    canvas.width = (cw << 5) / ratio;\n    canvas.height = ch / ratio;\n    var context = canvas.getContext(\"2d\");\n    context.fillStyle = context.strokeStyle = \"red\";\n    context.textAlign = \"center\";\n    return {\n      context: context,\n      ratio: ratio\n    };\n  }\n\n  function place(board, tag, bounds) {\n    var perimeter = [{\n      x: 0,\n      y: 0\n    }, {\n      x: size[0],\n      y: size[1]\n    }],\n        startX = tag.x,\n        startY = tag.y,\n        maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n        s = spiral(size),\n        dt = random() < .5 ? 1 : -1,\n        t = -dt,\n        dxdy,\n        dx,\n        dy;\n\n    while (dxdy = s(t += dt)) {\n      dx = ~~dxdy[0];\n      dy = ~~dxdy[1];\n      if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n      tag.x = startX + dx;\n      tag.y = startY + dy;\n      if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 || tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue; // TODO only check for collisions within current bounds.\n\n      if (!bounds || !cloudCollide(tag, board, size[0])) {\n        if (!bounds || collideRects(tag, bounds)) {\n          var sprite = tag.sprite,\n              w = tag.width >> 5,\n              sw = size[0] >> 5,\n              lx = tag.x - (w << 4),\n              sx = lx & 0x7f,\n              msx = 32 - sx,\n              h = tag.y1 - tag.y0,\n              x = (tag.y + tag.y0) * sw + (lx >> 5),\n              last;\n\n          for (var j = 0; j < h; j++) {\n            last = 0;\n\n            for (var i = 0; i <= w; i++) {\n              board[x + i] |= last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n            }\n\n            x += sw;\n          }\n\n          delete tag.sprite;\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  cloud.timeInterval = function (_) {\n    return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n  };\n\n  cloud.words = function (_) {\n    return arguments.length ? (words = _, cloud) : words;\n  };\n\n  cloud.size = function (_) {\n    return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n  };\n\n  cloud.font = function (_) {\n    return arguments.length ? (font = functor(_), cloud) : font;\n  };\n\n  cloud.fontStyle = function (_) {\n    return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n  };\n\n  cloud.fontWeight = function (_) {\n    return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n  };\n\n  cloud.rotate = function (_) {\n    return arguments.length ? (rotate = functor(_), cloud) : rotate;\n  };\n\n  cloud.text = function (_) {\n    return arguments.length ? (text = functor(_), cloud) : text;\n  };\n\n  cloud.spiral = function (_) {\n    return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;\n  };\n\n  cloud.fontSize = function (_) {\n    return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n  };\n\n  cloud.padding = function (_) {\n    return arguments.length ? (padding = functor(_), cloud) : padding;\n  };\n\n  cloud.random = function (_) {\n    return arguments.length ? (random = _, cloud) : random;\n  };\n\n  cloud.on = function () {\n    var value = event.on.apply(event, arguments);\n    return value === event ? cloud : value;\n  };\n\n  return cloud;\n}\n\nfunction cloudText(d) {\n  return d.text;\n}\n\nfunction cloudFont() {\n  return \"serif\";\n}\n\nfunction cloudFontNormal() {\n  return \"normal\";\n}\n\nfunction cloudFontSize(d) {\n  return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n  return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n  return 1;\n} // Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\n\n\nfunction cloudSprite(contextAndRatio, d, data, di) {\n  if (d.sprite) return;\n  var c = contextAndRatio.context,\n      ratio = contextAndRatio.ratio;\n  c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n  var x = 0,\n      y = 0,\n      maxh = 0,\n      n = data.length;\n  --di;\n\n  while (++di < n) {\n    d = data[di];\n    c.save();\n    c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n    var w = c.measureText(d.text + \"m\").width * ratio,\n        h = d.size << 1;\n\n    if (d.rotate) {\n      var sr = Math.sin(d.rotate * cloudRadians),\n          cr = Math.cos(d.rotate * cloudRadians),\n          wcr = w * cr,\n          wsr = w * sr,\n          hcr = h * cr,\n          hsr = h * sr;\n      w = Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f >> 5 << 5;\n      h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n    } else {\n      w = w + 0x1f >> 5 << 5;\n    }\n\n    if (h > maxh) maxh = h;\n\n    if (x + w >= cw << 5) {\n      x = 0;\n      y += maxh;\n      maxh = 0;\n    }\n\n    if (y + h >= ch) break;\n    c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n    if (d.rotate) c.rotate(d.rotate * cloudRadians);\n    c.fillText(d.text, 0, 0);\n    if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);\n    c.restore();\n    d.width = w;\n    d.height = h;\n    d.xoff = x;\n    d.yoff = y;\n    d.x1 = w >> 1;\n    d.y1 = h >> 1;\n    d.x0 = -d.x1;\n    d.y0 = -d.y1;\n    d.hasText = true;\n    x += w;\n  }\n\n  var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n      sprite = [];\n\n  while (--di >= 0) {\n    d = data[di];\n    if (!d.hasText) continue;\n    var w = d.width,\n        w32 = w >> 5,\n        h = d.y1 - d.y0; // Zero the buffer\n\n    for (var i = 0; i < h * w32; i++) {\n      sprite[i] = 0;\n    }\n\n    x = d.xoff;\n    if (x == null) return;\n    y = d.yoff;\n    var seen = 0,\n        seenRow = -1;\n\n    for (var j = 0; j < h; j++) {\n      for (var i = 0; i < w; i++) {\n        var k = w32 * j + (i >> 5),\n            m = pixels[(y + j) * (cw << 5) + (x + i) << 2] ? 1 << 31 - i % 32 : 0;\n        sprite[k] |= m;\n        seen |= m;\n      }\n\n      if (seen) seenRow = j;else {\n        d.y0++;\n        h--;\n        j--;\n        y++;\n      }\n    }\n\n    d.y1 = d.y0 + seenRow;\n    d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n  }\n} // Use mask-based collision detection.\n\n\nfunction cloudCollide(tag, board, sw) {\n  sw >>= 5;\n  var sprite = tag.sprite,\n      w = tag.width >> 5,\n      lx = tag.x - (w << 4),\n      sx = lx & 0x7f,\n      msx = 32 - sx,\n      h = tag.y1 - tag.y0,\n      x = (tag.y + tag.y0) * sw + (lx >> 5),\n      last;\n\n  for (var j = 0; j < h; j++) {\n    last = 0;\n\n    for (var i = 0; i <= w; i++) {\n      if ((last << msx | (i < w ? (last = sprite[j * w + i]) >>> sx : 0)) & board[x + i]) return true;\n    }\n\n    x += sw;\n  }\n\n  return false;\n}\n\nfunction cloudBounds(bounds, d) {\n  var b0 = bounds[0],\n      b1 = bounds[1];\n  if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n  if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n  if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n  if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n  return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n  var e = size[0] / size[1];\n  return function (t) {\n    return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n  };\n}\n\nfunction rectangularSpiral(size) {\n  var dy = 4,\n      dx = dy * size[0] / size[1],\n      x = 0,\n      y = 0;\n  return function (t) {\n    var sign = t < 0 ? -1 : 1; // See triangular numbers: T_n = n * (n + 1) / 2.\n\n    switch (Math.sqrt(1 + 4 * sign * t) - sign & 3) {\n      case 0:\n        x += dx;\n        break;\n\n      case 1:\n        y += dy;\n        break;\n\n      case 2:\n        x -= dx;\n        break;\n\n      default:\n        y -= dy;\n        break;\n    }\n\n    return [x, y];\n  };\n} // TODO reuse arrays?\n\n\nfunction zeroArray(n) {\n  var a = [],\n      i = -1;\n\n  while (++i < n) {\n    a[i] = 0;\n  }\n\n  return a;\n}\n\nfunction cloudCanvas() {\n  return document.createElement(\"canvas\");\n}\n\nfunction functor(d) {\n  return typeof d === \"function\" ? d : function () {\n    return d;\n  };\n}\n\nvar spirals = {\n  archimedean: archimedeanSpiral,\n  rectangular: rectangularSpiral\n};",{"version":3,"sources":["/Users/sheepman/Github/d3-vue-example/src/assets/js/d3.layout.cloud.js"],"names":["dispatch","require","cloudRadians","Math","PI","cw","ch","size","text","cloudText","font","cloudFont","fontSize","cloudFontSize","fontStyle","cloudFontNormal","fontWeight","rotate","cloudRotate","padding","cloudPadding","spiral","archimedeanSpiral","words","timeInterval","Infinity","event","timer","random","cloud","canvas","cloudCanvas","_","arguments","length","functor","start","contextAndRatio","getContext","board","zeroArray","bounds","n","i","tags","data","map","d","call","style","weight","sort","a","b","clearInterval","setInterval","step","x","y","cloudSprite","hasText","place","push","cloudBounds","x0","y0","x1","y1","stop","width","height","ratio","sqrt","getImageData","context","fillStyle","strokeStyle","textAlign","tag","perimeter","startX","startY","maxDelta","s","dt","t","dxdy","dx","dy","min","abs","cloudCollide","collideRects","sprite","w","sw","lx","sx","msx","h","last","j","spirals","on","value","apply","di","c","clearRect","maxh","save","measureText","sr","sin","cr","cos","wcr","wsr","hcr","hsr","max","translate","fillText","lineWidth","strokeText","restore","xoff","yoff","pixels","w32","seen","seenRow","k","m","slice","b0","b1","e","rectangularSpiral","sign","document","createElement","archimedean","rectangular"],"mappings":"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","sourcesContent":["// Word cloud layout by Jason Davies, https://www.jasondavies.com/wordcloud/\n// Algorithm due to Jonathan Feinberg, http://static.mrfeinberg.com/bv_ch03.pdf\n\nvar dispatch = require(\"d3-dispatch\").dispatch;\n\nvar cloudRadians = Math.PI / 180,\n    cw = 1 << 11 >> 5,\n    ch = 1 << 11;\n\nexport default function() {\n    var size = [256, 256],\n        text = cloudText,\n        font = cloudFont,\n        fontSize = cloudFontSize,\n        fontStyle = cloudFontNormal,\n        fontWeight = cloudFontNormal,\n        rotate = cloudRotate,\n        padding = cloudPadding,\n        spiral = archimedeanSpiral,\n        words = [],\n        timeInterval = Infinity,\n        event = dispatch(\"word\", \"end\"),\n        timer = null,\n        random = Math.random,\n        cloud = {},\n        canvas = cloudCanvas;\n\n    cloud.canvas = function(_) {\n        return arguments.length ? (canvas = functor(_), cloud) : canvas;\n    };\n\n    cloud.start = function() {\n        var contextAndRatio = getContext(canvas()),\n            board = zeroArray((size[0] >> 5) * size[1]),\n            bounds = null,\n            n = words.length,\n            i = -1,\n            tags = [],\n            data = words.map(function(d, i) {\n                d.text = text.call(this, d, i);\n                d.font = font.call(this, d, i);\n                d.style = fontStyle.call(this, d, i);\n                d.weight = fontWeight.call(this, d, i);\n                d.rotate = rotate.call(this, d, i);\n                d.size = ~~fontSize.call(this, d, i);\n                d.padding = padding.call(this, d, i);\n                return d;\n            }).sort(function(a, b) { return b.size - a.size; });\n\n        if (timer) clearInterval(timer);\n        timer = setInterval(step, 0);\n        step();\n\n        return cloud;\n\n        function step() {\n            var start = Date.now();\n            while (Date.now() - start < timeInterval && ++i < n && timer) {\n                var d = data[i];\n                d.x = (size[0] * (random() + .5)) >> 1;\n                d.y = (size[1] * (random() + .5)) >> 1;\n                cloudSprite(contextAndRatio, d, data, i);\n                if (d.hasText && place(board, d, bounds)) {\n                    tags.push(d);\n                    event.call(\"word\", cloud, d);\n                    if (bounds) cloudBounds(bounds, d);\n                    else bounds = [{x: d.x + d.x0, y: d.y + d.y0}, {x: d.x + d.x1, y: d.y + d.y1}];\n                    // Temporary hack\n                    d.x -= size[0] >> 1;\n                    d.y -= size[1] >> 1;\n                }\n            }\n            if (i >= n) {\n                cloud.stop();\n                event.call(\"end\", cloud, tags, bounds);\n            }\n        }\n    };\n\n    cloud.stop = function() {\n        if (timer) {\n            clearInterval(timer);\n            timer = null;\n        }\n        return cloud;\n    };\n\n    function getContext(canvas) {\n        canvas.width = canvas.height = 1;\n        var ratio = Math.sqrt(canvas.getContext(\"2d\").getImageData(0, 0, 1, 1).data.length >> 2);\n        canvas.width = (cw << 5) / ratio;\n        canvas.height = ch / ratio;\n\n        var context = canvas.getContext(\"2d\");\n        context.fillStyle = context.strokeStyle = \"red\";\n        context.textAlign = \"center\";\n\n        return {context: context, ratio: ratio};\n    }\n\n    function place(board, tag, bounds) {\n        var perimeter = [{x: 0, y: 0}, {x: size[0], y: size[1]}],\n            startX = tag.x,\n            startY = tag.y,\n            maxDelta = Math.sqrt(size[0] * size[0] + size[1] * size[1]),\n            s = spiral(size),\n            dt = random() < .5 ? 1 : -1,\n            t = -dt,\n            dxdy,\n            dx,\n            dy;\n\n        while (dxdy = s(t += dt)) {\n            dx = ~~dxdy[0];\n            dy = ~~dxdy[1];\n\n            if (Math.min(Math.abs(dx), Math.abs(dy)) >= maxDelta) break;\n\n            tag.x = startX + dx;\n            tag.y = startY + dy;\n\n            if (tag.x + tag.x0 < 0 || tag.y + tag.y0 < 0 ||\n                tag.x + tag.x1 > size[0] || tag.y + tag.y1 > size[1]) continue;\n            // TODO only check for collisions within current bounds.\n            if (!bounds || !cloudCollide(tag, board, size[0])) {\n                if (!bounds || collideRects(tag, bounds)) {\n                    var sprite = tag.sprite,\n                        w = tag.width >> 5,\n                        sw = size[0] >> 5,\n                        lx = tag.x - (w << 4),\n                        sx = lx & 0x7f,\n                        msx = 32 - sx,\n                        h = tag.y1 - tag.y0,\n                        x = (tag.y + tag.y0) * sw + (lx >> 5),\n                        last;\n                    for (var j = 0; j < h; j++) {\n                        last = 0;\n                        for (var i = 0; i <= w; i++) {\n                            board[x + i] |= (last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0);\n                        }\n                        x += sw;\n                    }\n                    delete tag.sprite;\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    cloud.timeInterval = function(_) {\n        return arguments.length ? (timeInterval = _ == null ? Infinity : _, cloud) : timeInterval;\n    };\n\n    cloud.words = function(_) {\n        return arguments.length ? (words = _, cloud) : words;\n    };\n\n    cloud.size = function(_) {\n        return arguments.length ? (size = [+_[0], +_[1]], cloud) : size;\n    };\n\n    cloud.font = function(_) {\n        return arguments.length ? (font = functor(_), cloud) : font;\n    };\n\n    cloud.fontStyle = function(_) {\n        return arguments.length ? (fontStyle = functor(_), cloud) : fontStyle;\n    };\n\n    cloud.fontWeight = function(_) {\n        return arguments.length ? (fontWeight = functor(_), cloud) : fontWeight;\n    };\n\n    cloud.rotate = function(_) {\n        return arguments.length ? (rotate = functor(_), cloud) : rotate;\n    };\n\n    cloud.text = function(_) {\n        return arguments.length ? (text = functor(_), cloud) : text;\n    };\n\n    cloud.spiral = function(_) {\n        return arguments.length ? (spiral = spirals[_] || _, cloud) : spiral;\n    };\n\n    cloud.fontSize = function(_) {\n        return arguments.length ? (fontSize = functor(_), cloud) : fontSize;\n    };\n\n    cloud.padding = function(_) {\n        return arguments.length ? (padding = functor(_), cloud) : padding;\n    };\n\n    cloud.random = function(_) {\n        return arguments.length ? (random = _, cloud) : random;\n    };\n\n    cloud.on = function() {\n        var value = event.on.apply(event, arguments);\n        return value === event ? cloud : value;\n    };\n\n    return cloud;\n}\n\nfunction cloudText(d) {\n    return d.text;\n}\n\nfunction cloudFont() {\n    return \"serif\";\n}\n\nfunction cloudFontNormal() {\n    return \"normal\";\n}\n\nfunction cloudFontSize(d) {\n    return Math.sqrt(d.value);\n}\n\nfunction cloudRotate() {\n    return (~~(Math.random() * 6) - 3) * 30;\n}\n\nfunction cloudPadding() {\n    return 1;\n}\n\n// Fetches a monochrome sprite bitmap for the specified text.\n// Load in batches for speed.\nfunction cloudSprite(contextAndRatio, d, data, di) {\n    if (d.sprite) return;\n    var c = contextAndRatio.context,\n        ratio = contextAndRatio.ratio;\n\n    c.clearRect(0, 0, (cw << 5) / ratio, ch / ratio);\n    var x = 0,\n        y = 0,\n        maxh = 0,\n        n = data.length;\n    --di;\n    while (++di < n) {\n        d = data[di];\n        c.save();\n        c.font = d.style + \" \" + d.weight + \" \" + ~~((d.size + 1) / ratio) + \"px \" + d.font;\n        var w = c.measureText(d.text + \"m\").width * ratio,\n            h = d.size << 1;\n        if (d.rotate) {\n            var sr = Math.sin(d.rotate * cloudRadians),\n                cr = Math.cos(d.rotate * cloudRadians),\n                wcr = w * cr,\n                wsr = w * sr,\n                hcr = h * cr,\n                hsr = h * sr;\n            w = (Math.max(Math.abs(wcr + hsr), Math.abs(wcr - hsr)) + 0x1f) >> 5 << 5;\n            h = ~~Math.max(Math.abs(wsr + hcr), Math.abs(wsr - hcr));\n        } else {\n            w = (w + 0x1f) >> 5 << 5;\n        }\n        if (h > maxh) maxh = h;\n        if (x + w >= (cw << 5)) {\n            x = 0;\n            y += maxh;\n            maxh = 0;\n        }\n        if (y + h >= ch) break;\n        c.translate((x + (w >> 1)) / ratio, (y + (h >> 1)) / ratio);\n        if (d.rotate) c.rotate(d.rotate * cloudRadians);\n        c.fillText(d.text, 0, 0);\n        if (d.padding) c.lineWidth = 2 * d.padding, c.strokeText(d.text, 0, 0);\n        c.restore();\n        d.width = w;\n        d.height = h;\n        d.xoff = x;\n        d.yoff = y;\n        d.x1 = w >> 1;\n        d.y1 = h >> 1;\n        d.x0 = -d.x1;\n        d.y0 = -d.y1;\n        d.hasText = true;\n        x += w;\n    }\n    var pixels = c.getImageData(0, 0, (cw << 5) / ratio, ch / ratio).data,\n        sprite = [];\n    while (--di >= 0) {\n        d = data[di];\n        if (!d.hasText) continue;\n        var w = d.width,\n            w32 = w >> 5,\n            h = d.y1 - d.y0;\n        // Zero the buffer\n        for (var i = 0; i < h * w32; i++) sprite[i] = 0;\n        x = d.xoff;\n        if (x == null) return;\n        y = d.yoff;\n        var seen = 0,\n            seenRow = -1;\n        for (var j = 0; j < h; j++) {\n            for (var i = 0; i < w; i++) {\n                var k = w32 * j + (i >> 5),\n                    m = pixels[((y + j) * (cw << 5) + (x + i)) << 2] ? 1 << (31 - (i % 32)) : 0;\n                sprite[k] |= m;\n                seen |= m;\n            }\n            if (seen) seenRow = j;\n            else {\n                d.y0++;\n                h--;\n                j--;\n                y++;\n            }\n        }\n        d.y1 = d.y0 + seenRow;\n        d.sprite = sprite.slice(0, (d.y1 - d.y0) * w32);\n    }\n}\n\n// Use mask-based collision detection.\nfunction cloudCollide(tag, board, sw) {\n    sw >>= 5;\n    var sprite = tag.sprite,\n        w = tag.width >> 5,\n        lx = tag.x - (w << 4),\n        sx = lx & 0x7f,\n        msx = 32 - sx,\n        h = tag.y1 - tag.y0,\n        x = (tag.y + tag.y0) * sw + (lx >> 5),\n        last;\n    for (var j = 0; j < h; j++) {\n        last = 0;\n        for (var i = 0; i <= w; i++) {\n            if (((last << msx) | (i < w ? (last = sprite[j * w + i]) >>> sx : 0))\n                & board[x + i]) return true;\n        }\n        x += sw;\n    }\n    return false;\n}\n\nfunction cloudBounds(bounds, d) {\n    var b0 = bounds[0],\n        b1 = bounds[1];\n    if (d.x + d.x0 < b0.x) b0.x = d.x + d.x0;\n    if (d.y + d.y0 < b0.y) b0.y = d.y + d.y0;\n    if (d.x + d.x1 > b1.x) b1.x = d.x + d.x1;\n    if (d.y + d.y1 > b1.y) b1.y = d.y + d.y1;\n}\n\nfunction collideRects(a, b) {\n    return a.x + a.x1 > b[0].x && a.x + a.x0 < b[1].x && a.y + a.y1 > b[0].y && a.y + a.y0 < b[1].y;\n}\n\nfunction archimedeanSpiral(size) {\n    var e = size[0] / size[1];\n    return function(t) {\n        return [e * (t *= .1) * Math.cos(t), t * Math.sin(t)];\n    };\n}\n\nfunction rectangularSpiral(size) {\n    var dy = 4,\n        dx = dy * size[0] / size[1],\n        x = 0,\n        y = 0;\n    return function(t) {\n        var sign = t < 0 ? -1 : 1;\n        // See triangular numbers: T_n = n * (n + 1) / 2.\n        switch ((Math.sqrt(1 + 4 * sign * t) - sign) & 3) {\n            case 0:  x += dx; break;\n            case 1:  y += dy; break;\n            case 2:  x -= dx; break;\n            default: y -= dy; break;\n        }\n        return [x, y];\n    };\n}\n\n// TODO reuse arrays?\nfunction zeroArray(n) {\n    var a = [],\n        i = -1;\n    while (++i < n) a[i] = 0;\n    return a;\n}\n\nfunction cloudCanvas() {\n    return document.createElement(\"canvas\");\n}\n\nfunction functor(d) {\n    return typeof d === \"function\" ? d : function() { return d; };\n}\n\nvar spirals = {\n    archimedean: archimedeanSpiral,\n    rectangular: rectangularSpiral\n};\n"]}]}