{"remainingRequest":"/Users/sheepman/Github/d3-vue-example/node_modules/babel-loader/lib/index.js!/Users/sheepman/Github/d3-vue-example/node_modules/eslint-loader/index.js??ref--13-0!/Users/sheepman/Github/d3-vue-example/src/assets/js/myCloud.js","dependencies":[{"path":"/Users/sheepman/Github/d3-vue-example/src/assets/js/myCloud.js","mtime":1556964419967},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["// var d3 = require(\"d3\"),\nimport * as d3 from 'd3';\nimport cloud from './d3.layout.cloud.js'; //  import * as d3 from 'd3'\n//     var cloud = require('./d3.layout.cloud.js').default();\n\nexport default function () {\n  var margin = {\n    top: 10,\n    right: 10,\n    bottom: 10,\n    left: 10\n  },\n      width = 350 - margin.left - margin.right,\n      height = 350 - margin.top - margin.bottom;\n  var frequency_list;\n  var svg = d3.select(\"body\").append(\"div\").style(\"width\", \"50%\").style(\"height\", height) // .attr(\"class\",\"col-xs-3\")\n  // .attr(\"class\",\"highlights-item col-md-12 col-sm-12 col-xs-12 \")\n  .style(\"float\", \"left\").style(\"display\", \"inline\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"class\", \"wordcloud\") // .attr(\"transform\",\n  //     \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  // .style(\"width\", \"50%\")\n  // .style(\"height\", height)\n  .attr(\"transform\", \"translate(\" + margin.left * 7 + \",\" + margin.top * 7 + \")\");\n  d3.csv(\"topicData.csv\").then(function (data) {\n    frequency_list = data;\n    var color = d3.scaleLinear().domain([0, 1, 2, 3, 4, 5, 6, 10, 15, 20, 100]).range([\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"]);\n    var layout = cloud().size([width, height]).words(frequency_list).padding(0) //space between words\n    .rotate(0) // .rotate(function() { return ~~(Math.random() * 2) * 90; })\n    .fontSize(function (d) {\n      return d.size;\n    }).on(\"end\", draw);\n    layout.start();\n\n    function draw(words) {\n      svg.append(\"g\") // .attr(\"transform\", \"translate(200,100)\")\n      .attr(\"transform\", \"translate(\" + layout.size()[0] / 3 + \",\" + layout.size()[1] / 3 + \")\") // without the transform, words words would get cutoff to the left and top, they would\n      // appear outside of the SVG area\n      .selectAll(\"text\").data(words).enter().append(\"text\").style(\"font-size\", function (d) {\n        return d.size / 2 + 5 + \"px\";\n      }).style(\"fill\", function (d, i) {\n        return color(i);\n      }).attr(\"transform\", function (d) {\n        return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n      }).text(function (d) {\n        return d.text;\n      });\n    }\n  });\n}",{"version":3,"sources":["/Users/sheepman/Github/d3-vue-example/src/assets/js/myCloud.js"],"names":["d3","cloud","margin","top","right","bottom","left","width","height","frequency_list","svg","select","append","style","attr","csv","then","data","color","scaleLinear","domain","range","layout","size","words","padding","rotate","fontSize","d","on","draw","start","selectAll","enter","i","x","y","text"],"mappings":"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","sourcesContent":["// var d3 = require(\"d3\"),\nimport * as d3 from 'd3'\nimport cloud from './d3.layout.cloud.js'\n//  import * as d3 from 'd3'\n//     var cloud = require('./d3.layout.cloud.js').default();\n\nexport default function () {\n\n    var margin = {top: 10, right: 10, bottom: 10, left: 10},\n        width = 350 - margin.left - margin.right,\n        height = 350 - margin.top - margin.bottom;\n\n    let frequency_list;\n\n    var svg = d3.select(\"body\")\n        .append(\"div\")\n        .style(\"width\", \"50%\")\n        .style(\"height\", height)\n        // .attr(\"class\",\"col-xs-3\")\n        // .attr(\"class\",\"highlights-item col-md-12 col-sm-12 col-xs-12 \")\n        .style(\"float\", \"left\")\n        .style(\"display\", \"inline\")\n        .append(\"svg\")\n\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"class\", \"wordcloud\")\n        // .attr(\"transform\",\n        //     \"translate(\" + margin.left + \",\" + margin.top + \")\");\n        // .style(\"width\", \"50%\")\n        // .style(\"height\", height)\n        .attr(\"transform\", \"translate(\" + margin.left * 7 + \",\" + margin.top * 7+ \")\");\n\n    d3.csv(\"topicData.csv\").then(function(data) {\n        frequency_list = data;\n\n\n        var color = d3.scaleLinear()\n            .domain([0, 1, 2, 3, 4, 5, 6, 10, 15, 20, 100])\n            .range([\"#ddd\", \"#ccc\", \"#bbb\", \"#aaa\", \"#999\", \"#888\", \"#777\", \"#666\", \"#555\", \"#444\", \"#333\", \"#222\"]);\n\n        var layout = cloud().size([width, height])\n            .words(frequency_list)\n            .padding(0)        //space between words\n            .rotate(0)\n            // .rotate(function() { return ~~(Math.random() * 2) * 90; })\n            .fontSize(function (d) {\n                return d.size;\n            })\n            .on(\"end\", draw);\n        layout.start();\n\n        function draw(words) {\n            svg\n                .append(\"g\")\n                // .attr(\"transform\", \"translate(200,100)\")\n                .attr(\"transform\", \"translate(\" + layout.size()[0] / 3 + \",\" + layout.size()[1] / 3 + \")\")\n                // without the transform, words words would get cutoff to the left and top, they would\n                // appear outside of the SVG area\n                .selectAll(\"text\")\n                .data(words)\n                .enter().append(\"text\")\n                .style(\"font-size\", function (d) {\n                    return d.size/2 + 5 + \"px\";\n                })\n                .style(\"fill\", function (d, i) {\n                    return color(i);\n                })\n                .attr(\"transform\", function (d) {\n                    return \"translate(\" + [d.x, d.y] + \")rotate(\" + d.rotate + \")\";\n                })\n                .text(function (d) {\n                    return d.text;\n                });\n        }\n    })\n}\n\n\n"]}]}