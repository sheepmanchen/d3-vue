{"remainingRequest":"/Users/sheepman/Github/d3-vue-example/node_modules/babel-loader/lib/index.js!/Users/sheepman/Github/d3-vue-example/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/sheepman/Github/d3-vue-example/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sheepman/Github/d3-vue-example/src/components/BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sheepman/Github/d3-vue-example/src/components/BarChart.vue","mtime":1556964218714},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sheepman/Github/d3-vue-example/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.sort\";\nimport _parseInt from \"/Users/sheepman/Github/d3-vue-example/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\n//\n//\n//\n//\n//\n//\n//\nimport * as d3 from \"d3\";\nexport default {\n  mounted: function mounted() {\n    this.testDraw();\n  },\n  created: function created() {// this.getlinear();\n  },\n  methods: {\n    testDraw: function testDraw() {\n      var margin = {\n        top: 50,\n        right: 50,\n        bottom: 50,\n        left: 150\n      }; // var width = parseInt(d3.select('body').style('width'), 10) - margin.left - margin.right;\n\n      var width = 600 - margin.left - margin.right; // var height = parseInt(d3.select('body').style('height'), 10) - margin.top - margin.bottom;\n\n      var height = 300 - margin.top - margin.bottom;\n      var buttonYears = [2015, 2016, 2017, 2018]; // var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n      var svg = d3.select(\"body\").append(\"div\").attr(\"class\", \"outbox\").style(\"float\", \"left\").style(\"display\", \"inline\").style(\"width\", \"50%\"); // .style(\"height\", \"500px\");\n      // .attr(\"class\",\"custom-card header-card card highlights-item col-md-12 col-sm-12 col-xs-12 border-top\");\n\n      var div = svg.append(\"div\").attr(\"class\", \"toolTip\");\n      svg = svg.append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.bottom + margin.top).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\"); // var form = d3.select(\"#myform\").style(\"transform\",\"translate(150px, 30px)\");\n\n      var year = 2015;\n      var playButton = d3.select(\".outbox\").append(\"div\").attr(\"class\", \"play-button button\").style(\"transform\", \"translate(10px,10px)\").text(\"PLAY!\").style(\"transform\", \"translate(\" + 20 + \"px ,\" + 20 + \"px)\");\n      var buttonContainer = d3.select(\".outbox\").append(\"div\").attr(\"class\", \"container\").style(\"width\", \"500px\").style(\"height\", \"50px\").style(\"transform\", \"translate(\" + 10 + \"px ,\" + 10 + \"px)\");\n      var buttons = buttonContainer.selectAll(\"div\").data(buttonYears).enter().append(\"div\").text(function (d) {\n        return d;\n      }).attr(\"class\", function (d) {\n        if (d === year) {\n          return \"myButton selected\";\n        } else {\n          return \"myButton\";\n        }\n      }).attr(\"value\", function (d) {\n        return d;\n      });\n      var playInterval;\n      buttons.on(\"click\", function (d) {\n        // d3.select(\".selected\").classed(\"selected\",false);\n        // d3.select(this).classed(\"selected\", true);\n        clearInterval(playInterval);\n        year = d;\n        update(year); // changeYear();\n      });\n      playButton.on(\"click\", function () {\n        var i = 0;\n        playInterval = setInterval(function () {\n          update(buttonYears[i]);\n          console.log(buttonYears[i]);\n          i++;\n\n          if (i > buttonYears.length - 1) {\n            clearInterval(playInterval);\n          }\n        }, 1000);\n      });\n      var xScale = d3.scaleLinear().range([0, width]);\n      var yScale = d3.scaleBand().range([0, height]).padding(0.2); // d3.select(\"input[value=\\\"2016\\\"]\").property(\"checked\", true);\n\n      changeYear();\n\n      function update(updateYear) {\n        d3.select(\".selected\").classed(\"selected\", false);\n        buttons.filter(function (d) {\n          return d == updateYear;\n        }).classed(\"selected\", true);\n        year = updateYear;\n        changeYear();\n      }\n\n      function changeYear() {\n        // var bar = svg.selectAll(\".bar\");\n        // bar.remove();\n        // svg.remove()\n        var dataSet;\n        d3.csv(\"department_change.csv\").then(function (data) {\n          //\n          console.log(data);\n          dataSet = data.filter(function (e) {\n            return _parseInt(e.year) == _parseInt(year);\n          }); // fDta=data.filter(function(e){return e.dpt===\"Mathematics\"});\n\n          console.log(dataSet);\n          dataSet.sort(function (x, y) {\n            return d3.ascending(_parseInt(y.totalNum), _parseInt(x.totalNum));\n          }); // dataSet.forEach(function (d) {\n          // d.deparment = d.department;\n          //  d.totalNum = parseInt(d.totoalNum);\n          //     const xValue = parseInt(d.tv);\n          //     const yValue = d.dpt;\n          // });\n\n          var xValue = function xValue(dataSet) {\n            return _parseInt(dataSet.totalNum);\n          };\n\n          var yValue = function yValue(dataSet) {\n            return dataSet.department;\n          };\n\n          xScale.domain([0, d3.max(dataSet, xValue)]);\n          yScale.domain(dataSet.map(yValue));\n          svg.select(\".y.axis\").remove();\n          svg.select(\".x.axis\").remove(); // svg.selectAll(\".temp-g\").remove();\n          // svg.select(\".temp-svg\").remove();\n          // svg.selectAll(\".text-g\").remove();\n          // svg.selectAll(\".bar\").remove();\n\n          svg.selectAll(\".text-value\").remove();\n          var xAxis = d3.axisBottom(xScale);\n          var yAxis = d3.axisLeft(yScale);\n          svg.append(\"g\").attr(\"class\", \"x axis\").attr(\"transform\", \"translate(0,\" + height + \")\").call(xAxis);\n          svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis);\n          svg.selectAll(\".x.axis\").call(d3.axisBottom(xScale));\n          svg.selectAll(\".y.axis\").call(d3.axisLeft(yScale)).attr(\"opacity\", '0').transition().duration(100).attr(\"opacity\", '1');\n          var bars = svg.selectAll(\".bar\").data(dataSet);\n          bars = bars.enter().append(\"g\").attr(\"class\", \"temp-g\"); // bars.exit()\n          //     .remove();\n          // bars = svg.selectAll(\".bar\");\n\n          bars.append(\"rect\").attr(\"class\", \"bar\") // .enter()\n          // bar.enter()\n          .attr(\"y\", function (d) {\n            return yScale(yValue(d));\n          }).attr(\"x\", 0).attr(\"width\", function (d) {\n            return d.totalNum;\n          }); // .attr(\"width\",d => xScale(xValue(d)))\n\n          bars = svg.selectAll(\".temp-g\").data(dataSet);\n          var barText = bars.append(\"text\").transition().duration(500).ease(d3.easeLinear).attr(\"class\", \"text-value\").attr(\"x\", function (d) {\n            return xScale(xValue(d)) - 15;\n          }).attr(\"y\", function (d) {\n            return yScale(yValue(d)) + 5;\n          }).attr(\"dy\", \"1em\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"14px\").attr(\"fill\", \"lightyellow\").attr(\"opacity\", '0') // .attr(\"transform\", function(d) { return \"translate(20, -20)\"; })\n          .text(function (d) {\n            return d.totalNum;\n          });\n          barText.transition().duration(500).attr(\"opacity\", '1');\n          bars.on(\"mousemove\", function (d) {\n            div.style(\"left\", d3.event.pageX - 40 + \"px\");\n            div.style(\"top\", d3.event.pageY - 45 + \"px\");\n            div.style(\"display\", \"inline-block\");\n            div.html(d.department + \"<br>\" + d.totalNum);\n          });\n          bars.on(\"mouseout\", function () {\n            div.style(\"display\", \"none\");\n          }); // bar.exit();\n\n          bars = svg.selectAll(\".bar\"); // updated data:\n\n          bars.transition().duration(750).ease(d3.easeLinear).attr(\"y\", function (d) {\n            return yScale(yValue(d));\n          }).attr(\"x\", 0).attr(\"width\", function (d) {\n            return xScale(xValue(d));\n          }).attr(\"height\", yScale.bandwidth());\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div id=\"mydiv\">\n\n    </div>\n</template>\n\n\n<script>\n    import * as d3 from \"d3\";\n\n    export default {\n        mounted() {\n            this.testDraw();\n        },\n        created() {\n            // this.getlinear();\n        },\n        methods: {\n             testDraw(){\n                 var margin = {top:50, right: 50, bottom: 50, left:150};\n                 // var width = parseInt(d3.select('body').style('width'), 10) - margin.left - margin.right;\n                 var width = 600 - margin.left - margin.right;\n                 // var height = parseInt(d3.select('body').style('height'), 10) - margin.top - margin.bottom;\n                 var height = 300 - margin.top - margin.bottom;\n                 let buttonYears = [2015, 2016, 2017, 2018];\n\n                 // var div = d3.select(\"body\").append(\"div\").attr(\"class\", \"toolTip\");\n\n                 var svg = d3.select(\"body\")\n                     .append(\"div\")\n                     .attr(\"class\",\"outbox\")\n                     .style(\"float\", \"left\")\n                     .style(\"display\", \"inline\")\n                     .style(\"width\", \"50%\");\n                     // .style(\"height\", \"500px\");\n\n                     // .attr(\"class\",\"custom-card header-card card highlights-item col-md-12 col-sm-12 col-xs-12 border-top\");\n\n                 var div = svg.append(\"div\").attr(\"class\",\"toolTip\");\n\n                 svg =  svg.append(\"svg\")\n                     .attr(\"width\", width + margin.left + margin.right)\n                     .attr(\"height\", height + margin.bottom + margin.top)\n                     .append(\"g\")\n                     .attr(\"transform\",\"translate(\" + margin.left +\",\"+margin.top+\")\");\n\n                 // var form = d3.select(\"#myform\").style(\"transform\",\"translate(150px, 30px)\");\n                 let year = 2015;\n\n                 let playButton = d3.select(\".outbox\").append(\"div\")\n                     .attr(\"class\", \"play-button button\")\n                     .style(\"transform\",\"translate(10px,10px)\")\n                     .text(\"PLAY!\")\n                     .style(\"transform\",\"translate(\" + 20 +\"px ,\"+ 20 +\"px)\");\n\n                 let buttonContainer = d3.select(\".outbox\").append(\"div\").attr(\"class\", \"container\")\n                     .style(\"width\", \"500px\")\n                     .style(\"height\", \"50px\")\n                     .style(\"transform\",\"translate(\" + 10 +\"px ,\"+ 10 +\"px)\");\n\n\n                 let buttons = buttonContainer.selectAll(\"div\")\n                     .data(buttonYears)\n                     .enter()\n                     .append(\"div\")\n                     .text(function(d){return d;})\n                     .attr(\"class\", function(d){\n                         if(d===year){\n                             return \"myButton selected\";\n                         }\n                         else{\n                             return \"myButton\";\n                         }\n                     })\n                     .attr(\"value\", function(d){return d;});\n\n                 var playInterval;\n                 buttons.on(\"click\", function(d){\n                     // d3.select(\".selected\").classed(\"selected\",false);\n                     // d3.select(this).classed(\"selected\", true);\n                     clearInterval(playInterval);\n                     year = d;\n                     update(year);\n                     // changeYear();\n                 });\n\n                 playButton.on(\"click\", function(){\n                     var i = 0;\n                     playInterval = setInterval(function(){\n                         update(buttonYears[i]);\n                         console.log(buttonYears[i]);\n                         i++;\n                         if(i>buttonYears.length-1){\n                             clearInterval(playInterval);\n                         }\n                     }, 1000);\n                 });\n\n\n                 var xScale = d3.scaleLinear().range([0,width]);\n                 var yScale = d3.scaleBand().range([0, height]).padding(0.2);\n\n                 // d3.select(\"input[value=\\\"2016\\\"]\").property(\"checked\", true);\n                 changeYear();\n\n                 function update(updateYear){\n\n                     d3.select(\".selected\").classed(\"selected\", false);\n                     buttons.filter(function(d){\n                         return d==updateYear;\n                     }).classed(\"selected\", true);\n\n                     year = updateYear;\n                     changeYear();\n\n                 }\n\n                 function changeYear() {\n                     // var bar = svg.selectAll(\".bar\");\n                     // bar.remove();\n                     // svg.remove()\n\n                     let dataSet;\n                     d3.csv(\"department_change.csv\").then(function (data) {\n                         //\n                         console.log(data);\n                         dataSet = data.filter(function (e) {\n                             return parseInt(e.year) == parseInt(year);\n                         });\n                         // fDta=data.filter(function(e){return e.dpt===\"Mathematics\"});\n                         console.log(dataSet);\n                         dataSet.sort(function (x, y) {\n                             return d3.ascending(parseInt(y.totalNum), parseInt(x.totalNum));\n                         });\n                         // dataSet.forEach(function (d) {\n                             // d.deparment = d.department;\n                             //  d.totalNum = parseInt(d.totoalNum);\n                             //     const xValue = parseInt(d.tv);\n                             //     const yValue = d.dpt;\n                         // });\n\n                         const xValue = dataSet => parseInt(dataSet.totalNum);\n                         const yValue = dataSet => dataSet.department;\n\n                         xScale.domain([0, d3.max(dataSet, xValue)]);\n                         yScale.domain(dataSet.map(yValue));\n\n\n                         svg.select(\".y.axis\").remove();\n                         svg.select(\".x.axis\").remove();\n                         // svg.selectAll(\".temp-g\").remove();\n                         // svg.select(\".temp-svg\").remove();\n                         // svg.selectAll(\".text-g\").remove();\n                         // svg.selectAll(\".bar\").remove();\n\n                         svg.selectAll(\".text-value\").remove();\n\n                         let xAxis = d3.axisBottom(xScale);\n                         let yAxis = d3.axisLeft(yScale);\n\n                         svg.append(\"g\")\n                             .attr(\"class\", \"x axis\")\n                             .attr(\"transform\", \"translate(0,\" + height + \")\")\n                             .call(xAxis);\n\n                         svg.append(\"g\")\n                             .attr(\"class\", \"y axis\")\n                             .call(yAxis);\n\n                         svg.selectAll(\".x.axis\")\n                             .call(d3.axisBottom(xScale));\n\n                         svg.selectAll(\".y.axis\")\n                             .call(d3.axisLeft(yScale))\n                             .attr(\"opacity\", '0')\n                             .transition()\n                             .duration(100)\n                             .attr(\"opacity\", '1');\n\n\n                         var bars = svg.selectAll(\".bar\").data(dataSet);\n                         bars = bars.enter().append(\"g\").attr(\"class\", \"temp-g\");\n                         // bars.exit()\n                         //     .remove();\n\n\n                         // bars = svg.selectAll(\".bar\");\n                         bars.append(\"rect\")\n                             .attr(\"class\", \"bar\")\n                             // .enter()\n                             // bar.enter()\n                             .attr(\"y\", d => yScale(yValue(d)))\n                             .attr(\"x\", 0)\n                             .attr(\"width\", function (d) {\n                                 return d.totalNum;\n                             });\n                         // .attr(\"width\",d => xScale(xValue(d)))\n\n                         bars = svg.selectAll(\".temp-g\").data(dataSet);\n                         var barText = bars.append(\"text\")\n                             .transition()\n                             .duration(500)\n                             .ease(d3.easeLinear)\n                             .attr(\"class\", \"text-value\")\n                             .attr(\"x\", d => xScale(xValue(d)) - 15)\n                             .attr(\"y\", d => yScale(yValue(d)) + 5)\n                             .attr(\"dy\", \"1em\")\n                             .attr(\"text-anchor\", \"middle\")\n                             .attr(\"font-size\", \"14px\")\n                             .attr(\"fill\", \"lightyellow\")\n                             .attr(\"opacity\", '0')\n                             // .attr(\"transform\", function(d) { return \"translate(20, -20)\"; })\n                             .text(function (d) {\n                                 return d.totalNum;\n                             });\n\n                         barText.transition()\n                             .duration(500).attr(\"opacity\", '1');\n\n                         bars.on(\"mousemove\", function (d) {\n                             div.style(\"left\", d3.event.pageX - 40 + \"px\");\n                             div.style(\"top\", d3.event.pageY - 45 + \"px\");\n                             div.style(\"display\", \"inline-block\");\n                             div.html((d.department) + \"<br>\" + (d.totalNum));\n\n                         });\n                         bars.on(\"mouseout\", function () {\n                             div.style(\"display\", \"none\");\n                         });\n\n                         // bar.exit();\n\n                         bars = svg.selectAll(\".bar\");\n                         // updated data:\n                         bars.transition()\n                             .duration(750)\n                             .ease(d3.easeLinear)\n                             .attr(\"y\", d => yScale(yValue(d)))\n                             .attr(\"x\", 0)\n                             .attr(\"width\", d => xScale(xValue(d)))\n                             .attr(\"height\", yScale.bandwidth());\n\n\n                     })\n                 }\n\n            },\n\n        }\n    };\n</script>\n\n\n<style>\n    .bar {\n        fill: steelblue;\n        fill-opacity: .5;\n\n    }\n\n    body {\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        /*width: 600px;*/\n        /*height: 300px;*/\n        position: relative;\n    }\n    svg {\n        width: 100%;\n        height: 100%;\n        position: center;\n    }\n\n    /*path.slice{*/\n    /*stroke-width:2px;*/\n    /*}*/\n\n    text{\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n    }\n\n    polyline{\n        opacity: .3;\n        stroke: black;\n        stroke-width: 2px;\n        fill: none;\n    }\n\n    label {\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        font-weight: normal;\n    }\n\n    .toolTip {\n        font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n        position: absolute;\n        display: none;\n        width: auto;\n        height: auto;\n        background: none repeat scroll 0 0 white;\n        border: 0 none;\n        border-radius: 8px 8px 8px 8px;\n        box-shadow: -3px 3px 15px #888888;\n        color: black;\n        font: 12px sans-serif;\n        padding: 5px;\n        text-align: center;\n    }\n\n    rect {\n        stroke-width: 2;\n    }\n\n\n\n    /*text.value{*/\n    /*font-size: 200%;*/\n    /*fill: white;*/\n    /*}*/\n    /**/\n    /*text.label{*/\n    /*font-size: 100%;*/\n    /*}*/\n\n    .axis text {\n        font: 14px sans-serif;\n    }\n\n    .axis path{\n        fill: none;\n        stroke: #000;\n    }\n\n    .axis line {\n        fill: none;\n        stroke: #000;\n        shape-rendering: crispEdges;\n    }\n\n    .axis .tick line {\n        stroke-width: 1;\n        stroke: rgba(0, 0, 0, 0.2);\n    }\n\n    .axisHorizontal path{\n        fill: none;\n    }\n\n    .axisHorizontal line {\n        fill: none;\n        stroke: #000;\n        shape-rendering: crispEdges;\n    }\n\n    .axisHorizontal .tick line {\n        stroke-width: 1;\n        stroke: rgba(0, 0, 0, 0.2);\n    }\n\n    .container{\n        /*width: 1000px;*/\n        margin-bottom: 15px;\n        margin-top: 10px;\n        margin-left: 80px;\n        /*background: antiquewhite;*/\n        overflow-x:hidden;\n        overflow-y:hidden;\n    }\n    .myButton{\n        float: left;\n        margin-left: 30px;\n        font-size: 14px;\n        height: 30px;\n        font-weight: lighter;\n        cursor: pointer;\n\n    }\n\n    .play-button {\n    position: absolute;\n    text-align: center;\n    text-align-all: center;\n    /*top: 140px;*/\n    /*left: 50px;*/\n    font-size: 14px;\n    background: #f08080;\n    /*padding-right: 26px;*/\n    border-radius: 3px;\n    border: none;\n    color: white;\n    margin: 0;\n    padding: 0 12px;\n    /*width: 60px;*/\n    cursor: pointer;\n    /*height: 30px;*/\n    }\n\n    /*.selected{*/\n        /*background:-webkit-gradient(linear, left top, left bottom, color-stop(0.05, #80b5ea), color-stop(1, #bddbfa));*/\n        /*background:-moz-linear-gradient(top, #80b5ea 5%, #bddbfa 100%);*/\n        /*background:-webkit-linear-gradient(top, #80b5ea 5%, #bddbfa 100%);*/\n        /*background:-o-linear-gradient(top, #80b5ea 5%, #bddbfa 100%);*/\n        /*background:-ms-linear-gradient(top, #80b5ea 5%, #bddbfa 100%);*/\n        /*background:linear-gradient(to bottom, #80b5ea 5%, #bddbfa 100%);*/\n        /*filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#80b5ea', endColorstr='#bddbfa',GradientType=0);*/\n        /*background-color:#80b5ea;    }*/\n    /*form {*/\n    /*transform: translate(150px, 150px);*/\n    /*}*/\n    /*label {*/\n    /*transform: translate(150px, 150px);*/\n    /*}*/\n</style>"],"sourceRoot":"src/components"}]}